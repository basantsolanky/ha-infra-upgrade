---
- hosts: all
  become: true
  vars:
    docker_gpg_key_url: "https://download.docker.com/linux/debian/gpg"

  tasks:
    - name: Update APT package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600 # Update if cache is older than 1 hour
      when: vagrant is defined

    - name: Install prerequisite packages for adding Docker repository
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      when: vagrant is defined

    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: vagrant is defined

    - name: Add Docker's official GPG key
      get_url:
        url: "{{ docker_gpg_key_url }}"
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        force: yes # Overwrite if exists, useful for key updates
      when: vagrant is defined


    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu focal stable"
        state: present
        filename: docker # Creates /etc/apt/sources.list.d/docker.list
        update_cache: yes
      when: vagrant is defined

    - name: Remove Docker.io
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - docker-ce-root-less-extra
        state: absent
        allow_change_held_packages: true

    - name: Install containerd.io
      apt:
        name: containerd.io
        state: present
        update_cache: yes # Ensure cache is updated after adding repo if not done by apt_repository

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate default containerd configuration
      command: containerd config default
      register: containerd_config_default
      changed_when: false # This command doesn't change state, just outputs

    - name: Write default containerd configuration to file
      copy:
        content: "{{ containerd_config_default.stdout }}"
        dest: /etc/containerd/config.toml
        mode: '0644'
      notify: Restart containerd

    - name: Ensure SystemdCgroup is set to true in containerd config
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '(\s*SystemdCgroup\s*=\s*)false'
        line: '\1true'
        backrefs: yes
      notify: Restart containerd

    - name: Ensure containerd service is enabled and started
      systemd:
        name: containerd
        state: started
        enabled: yes

    - name: Grab crictl
      get_url:
        url: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.33.0/crictl-v1.33.0-linux-amd64.tar.gz
        dest: /tmp/crictl.tar.gz
        mode: '0644'
        force: yes # Overwrite if exists, useful for key updates

    - name: Extract crictl
      unarchive:
        src: /tmp/crictl.tar.gz
        dest: /usr/local/bin
        creates: /usr/local/bin/crictl
        mode: '0755'
        remote_src: true

  handlers:
    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        daemon_reload: yes # Important after config changes





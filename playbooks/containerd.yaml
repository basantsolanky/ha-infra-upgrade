---
- hosts: all
  become: true
  vars:
    docker_gpg_key_url: "https://download.docker.com/linux/debian/gpg"
    new_runtime_endpoint: "unix:///run/containerd/containerd.sock"
  tasks:
    - name: Stop Docker.io
      service:
        name: docker
        state: stopped
      ignore_errors: true

    - name: Remove Docker.io
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - docker-ce-root-less-extra
        state: absent
        allow_change_held_packages: true

    - name: Install containerd.io
      apt:
        name: containerd.io
        state: present
        update_cache: yes # Ensure cache is updated after adding repo if not done by apt_repository

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate default containerd configuration
      command: containerd config default
      register: containerd_config_default
      changed_when: false # This command doesn't change state, just outputs

    - name: Write default containerd configuration to file
      copy:
        content: "{{ containerd_config_default.stdout }}"
        dest: /etc/containerd/config.toml
        mode: '0644'
      notify: Restart containerd

    - name: Ensure SystemdCgroup is set to true in containerd config
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '(\s*SystemdCgroup\s*=\s*)false'
        line: '\1true'
        backrefs: yes
      notify: Restart containerd

    - name: Ensure containerd service is enabled and started
      systemd:
        name: containerd
        state: started
        enabled: yes

    - name: Grab crictl
      get_url:
        url: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.33.0/crictl-v1.33.0-linux-amd64.tar.gz
        dest: /tmp/crictl.tar.gz
        mode: '0644'
        force: yes 

    - name: Extract crictl
      unarchive:
        src: /tmp/crictl.tar.gz
        dest: /usr/local/bin
        creates: /usr/local/bin/crictl
        mode: '0755'
        remote_src: true

    - name: Change the container runtime
      lineinfile:
        path: "/var/lib/kubelet/kubeadm-flags.env"
        regexp: '^(KUBELET_KUBEADM_ARGS="[^"]*--container-runtime-endpoint=)unix:///var/run/cri-dockerd\.sock([^"]*")$'
        line: '\g<1>{{ new_runtime_endpoint }}\g<2>'
        backrefs: yes
        state: present
      notify: Restart kubelet
      register: kubelet_flags_change



  handlers:
    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        daemon_reload: yes
    - name: Restart kubelet
      systemd:
        name: kubelet
        state: restarted
        daemon_reload: yes

{{- if .Values.prometheus.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
  project: default
  source:
    repoURL: {{ .Values.git.repo }}
    path: charts/vendor/kube-prometheus-stack
    targetRevision: {{ .Values.git.revision }}
    helm:
      releaseName: prometheus
      values: |
        global:
          imageRegistry: {{ .Values.repository }}

        alertmanager:
          alertmanagerSpec:
            {{- with .Values.prometheus.tolerations }}
            tolerations:
                {{- toYaml . | nindent 14 }}
              {{- end }}
            image:
              repository: 'alertmanager'
        
        kube-state-metrics:
          {{- with .Values.prometheus.tolerations }}
          tolerations:
              {{- toYaml . | nindent 12 }}
            {{- end }}
          image:
            repository: kube-state-metrics 
        
        prometheus-node-exporter:
          {{- with .Values.prometheus.tolerations }}
          tolerations:
              {{- toYaml . | nindent 12 }}
            {{- end }}
          image:
            repository: node-exporter
        
        grafana:
          adminPassword: 12Panasonic34
          grafana.ini:
            server:
              root_url: 'http://%(domain)s/grafana'
              enforce_domain: false
              serve_from_sub_path: true
          {{- with .Values.grafana.ingress }}
          ingress:
              {{- toYaml . | nindent 14 }}
            {{- end }}

          {{- with .Values.prometheus.tolerations }}
          tolerations:
              {{- toYaml . | nindent 12 }}
            {{- end }}
          # This creates some test job that needs a bats/bats image. I don't think its needed
          testFramework:
            enabled: false
          image:
            repository: grafana
            registry: {{ .Values.repository }}
          sidecar:
            image:
              repository: k8s-sidecar
              registry: {{ .Values.repository }}
        
        prometheusOperator:
          {{- with .Values.prometheus.tolerations }}
          tolerations:
              {{- toYaml . | nindent 12 }}
            {{- end }}
          image:
            repository: prometheus-operator
          admissionWebhooks:
            patch:
              image:
                repository: kube-webhook-certgen
          prometheusConfigReloader:
            image:
              repository: prometheus-config-reloader
        
        prometheus:
          prometheusSpec:
            {{- with .Values.prometheus.resources }}
            resources:
                {{- toYaml . | nindent 14 }}
              {{- end }}

            {{- with .Values.prometheus.tolerations }}
            tolerations:
                {{- toYaml . | nindent 14 }}
              {{- end }}
            image:
              repository: 'prometheus'
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            {{- with .Values.prometheus.storageSpec }}
            storageSpec:
              {{- toYaml . | nindent 8 }}
            {{- end }}

            {{- with .Values.prometheus.additionalScrapeConfigs }}
            additionalScrapeConfigs:
              {{- toYaml . | nindent 8 }}
            {{- end }}
{{- end -}}
